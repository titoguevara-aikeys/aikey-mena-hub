name: Keys Pay CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: pass
          POSTGRES_USER: keys
          POSTGRES_DB: keyspay
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm test
      env:
        DATABASE_URL: postgres://keys:pass@localhost:5432/keyspay

    - name: Run linting
      run: npm run lint

    - name: Run type checking
      run: npm run type-check

    - name: Build application
      run: npm run build

    - name: Generate OpenAPI docs
      run: npm run generate-docs

    - name: Health check test
      run: |
        npm run start &
        sleep 10
        curl -f http://localhost:3000/api/keyspay/health || exit 1

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: |
          dist/
          openapi.yaml
          postman/

  deploy-staging:
    if: github.ref == 'refs/heads/develop'
    needs: test-and-build
    runs-on: ubuntu-latest
    
    steps:
    - name: Deploy to Staging
      run: echo "Deploy to staging environment"

  deploy-production:
    if: github.ref == 'refs/heads/main'
    needs: test-and-build
    runs-on: ubuntu-latest
    
    steps:
    - name: Deploy to Production
      run: echo "Deploy to production environment"
      
    - name: Health check production
      run: |
        sleep 30
        curl -f https://api.keyspay.com/health || exit 1